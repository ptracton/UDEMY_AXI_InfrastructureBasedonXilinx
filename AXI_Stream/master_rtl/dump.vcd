$date
	Sat Mar 23 14:27:52 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1us
$end
$scope module tb_axis_m $end
$var wire 1 ! tvalid $end
$var wire 1 " tlast $end
$var wire 32 # tdata [31:0] $end
$var wire 1 $ finish $end
$var reg 1 % aclk $end
$var reg 1 & areset_n $end
$var reg 32 ' data [31:0] $end
$var reg 1 ( send $end
$var reg 1 ) tready $end
$scope module dump $end
$upscope $end
$scope module inst_axis_m $end
$var wire 1 % aclk $end
$var wire 1 & areset_n $end
$var wire 32 * data [31:0] $end
$var wire 1 + handshake $end
$var wire 1 ( send $end
$var wire 1 " tlast $end
$var wire 1 ) tready $end
$var reg 1 $ finish $end
$var reg 1 , send_pulse_1d $end
$var reg 1 - send_pulse_2d $end
$var reg 32 . tdata [31:0] $end
$var reg 1 ! tvalid $end
$upscope $end
$scope module test_tasks $end
$var reg 32 / test_case_fail [31:0] $end
$var reg 1 0 test_failed $end
$var reg 1 1 test_passed $end
$var integer 32 2 test_count [31:0] $end
$scope task all_tests_completed $end
$upscope $end
$scope task compare_values $end
$var reg 640 3 display_string [640:1] $end
$var reg 32 4 expected [31:0] $end
$var reg 32 5 measured [31:0] $end
$upscope $end
$scope task display_results $end
$var reg 640 6 display_string [640:1] $end
$var reg 32 7 expected [31:0] $end
$var reg 32 8 measured [31:0] $end
$var reg 136 9 pass_fail [135:0] $end
$upscope $end
$upscope $end
$scope task stream_data $end
$var reg 32 : sdata [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b0 2
01
00
b0 /
bx .
x-
x,
x+
b0 *
1)
0(
b0 '
0&
0%
x$
bx #
x"
x!
$end
#2
0+
0,
0-
b0 #
b0 .
0"
0!
0$
1%
#4
0%
#6
1%
#8
0%
#10
1%
#12
0%
#14
1%
#16
0%
#18
1%
#19
1&
#20
0%
#22
1%
#24
0%
#26
1%
#28
0%
#30
1%
#32
0%
#34
1%
#36
0%
#38
1%
#39
b10101010101010101011101110111011 '
b10101010101010101011101110111011 *
1(
b10101010101010101011101110111011 :
#40
0%
#42
1,
0)
1%
#44
0%
#46
b10101010101010101011101110111011 5
b10101010101010101011101110111011 4
b101001101010100010100100100010101000001010011010010000001000100010000010101010001000001 3
1+
1"
1!
b10101010101010101011101110111011 #
b10101010101010101011101110111011 .
1-
b10010000101010011010100100100 '
b10010000101010011010100100100 *
1)
0(
1%
#47
b1 2
b110110101101100110001001110110011001100110010011011010101000001000001010100110101001100011011010110110011000001101101 9
b10101010101010101011101110111011 8
b10101010101010101011101110111011 7
b101001101010100010100100100010101000001010011010010000001000100010000010101010001000001001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000 6
#48
0%
#49
b11001100110011001101110111011101 '
b11001100110011001101110111011101 *
1(
b11001100110011001101110111011101 :
#50
b0 #
b0 .
0"
0!
0+
0)
1%
#52
0%
#54
b11001100110011001101110111011101 5
b11001100110011001101110111011101 4
1+
1"
1!
b11001100110011001101110111011101 #
b11001100110011001101110111011101 .
b11000000100010010101111010000001 '
b11000000100010010101111010000001 *
1)
0(
1%
#55
b10 2
b11001100110011001101110111011101 8
b11001100110011001101110111011101 7
b101001101010100010100100100010101000001010011010010000001000100010000010101010001000001001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000 6
#56
0%
#58
0+
0,
b0 #
b0 .
0"
0!
1%
#60
0%
#62
0-
1%
#64
0%
#66
1%
#68
0%
#70
1%
#72
0%
#74
11
1%
#76
0%
#78
1%
#80
0%
#82
1%
#84
0%
#86
1%
#88
0%
#90
1%
#92
0%
#94
1%
#96
0%
#98
1%
#100
0%
#102
1%
#104
0%
#106
1%
#108
0%
#110
1%
#112
0%
#114
1%
#116
0%
#118
1%
#120
0%
#122
1%
#124
0%
#126
1%
#128
0%
#130
1%
#132
0%
#134
1%
#136
0%
#138
1%
#140
0%
#142
1%
#144
0%
#146
1%
#148
0%
#150
1%
#152
0%
#154
1%
#156
0%
#158
1%
#160
0%
#162
1%
#164
0%
#166
1%
#168
0%
#170
1%
#172
0%
#174
1%
